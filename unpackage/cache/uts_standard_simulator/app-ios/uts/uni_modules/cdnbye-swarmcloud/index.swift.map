{"version":3,"sources":["uni_modules/cdnbye-swarmcloud/utssdk/app-ios/index.uts"],"sourcesContent":["/**\n * 引用 iOS 系统库，示例如下：\n * import { UIDevice } from \"UIKit\";\n * [可选实现，按需引入]\n */\n// 从 DCloudUTSFoundation 依赖库中导入 UTSiOS 类\n/* import { UTSiOS } from \"DCloudUTSFoundation\";\nimport { UIDevice } from \"UIKit\"; */\n\nimport { P2pConfig,P2pEngine,TrackerZone,LogLevel } from \"SwarmCloudKit\";\nimport { Double } from 'Swift';\n\nlet logArr = [LogLevel.VERBOSE,LogLevel.DEBUG,LogLevel.INFO,LogLevel.WARN,LogLevel.ERROR];\nlet zoneArr = [TrackerZone.Europe,TrackerZone.HongKong,TrackerZone.USA];\nexport type ConfigOptions = {\n  p2pEnabled?: boolean,// 开启或关闭p2p engine 默认true\n  useStrictHlsSegmentId?: boolean,//使用基于url的SegmentId，替代默认基于序列号的 默认false\n  isSetTopBox?: boolean,// 如果运行于机顶盒请设置成true 默认false 安卓有 ios没有\n  logEnabled?: boolean,// 是否打印日志 默认false\n  logLevel?: number,// 打印日志的级别0:VERBOSE,1:DEBUG,2:INFO,3:WARN,4:ERROR 默认3\n  trackerZone?:number,// tracker服务器地址所在国家的枚举，分为0:Europe,1:HongKong,2:USA 默认0\n  downloadTimeout?:number,// HTTP下载ts文件超时时间  默认30000ms 安卓有 ios没有\n  localPortHls?:number,// HLS本地代理服务器的端口号(默认随机端口)\n  localPortDash?:number,// DASH本地代理服务器的端口号(默认随机端口) 安卓有 ios没有\n  diskCacheLimit?:number,// 点播模式下P2P在磁盘缓存的最大数据量(设为0可以禁用磁盘缓存) 默认2000*1024*1024\n  memoryCacheCountLimit?:number,// P2P在内存缓存的最大数据量，用ts文件个数表示 默认15\n  maxPeerConnections?:number,// 最大连接节点数量 默认25\n  useHttpRange?:boolean,// 在可能的情况下使用Http Range请求来补足p2p下载超时的剩余部分数据 默认true\n  httpHeadersForHls?:Map<string,string>,// 设置请求ts和m3u8时的HTTP请求头 默认null\n  httpHeadersForDash?:Map<string,string>,// 设置请求Dash文件时的HTTP请求头 默认null 安卓有 ios没有\n  httpLoadTime?:number,// P2P下载超时后留给HTTP下载的时间 默认3s\n  sharePlaylist?:boolean,// 是否允许m3u8文件的P2P传输 默认false\n  insertTimeOffsetTag?:number,// 仅在直播模式生效，在m3u8文件中插入 \"#EXT-X-START:TIME-OFFSET=[timeOffset]\"，强制播放器从某个位置开始加载，其中 [timeOffset] 是在播放列表的偏移量，如果为负则从播放列表结尾往前偏移（单位：秒）\n  mediaFileSeparator?:string,// 媒体文件后缀分隔符 默认“.”\n}\n//初始化 \nexport  function initP2p (token:string,configOptions:ConfigOptions|null=null):void {\n\n\t\n\tif(configOptions!=null){\n\t\tlet config = P2pConfig();\n\t\t\tif(configOptions!.p2pEnabled!=null){\n\t\t\t\tconfig.p2pEnabled=configOptions!.p2pEnabled as boolean;\n\t\t\t}\n\t\t\tif(configOptions!.useStrictHlsSegmentId!=null){\n\t\t\t\tconfig.useStrictHlsSegmentId=configOptions!.useStrictHlsSegmentId as boolean;\n\t\t\t}\n\t\t\tif(configOptions!.trackerZone!=null){\n\t\t\t\tconfig.trackerZone=zoneArr[configOptions!.trackerZone as number];\n\t\t\t}\n\t\t\tif(configOptions!.logEnabled!=null){\n\t\t\t\tconfig.debug=configOptions!.logEnabled  as boolean;\n\t\t\t}\n\t\t\tif(configOptions!.logLevel!=null){\n\t\t\t\tconfig.logLevel=logArr[configOptions!.logLevel as number];\n\t\t\t}\n\t\t\tif(configOptions!.localPortHls!=null){\n\t\t\t\tconfig.localPortHls=(configOptions!.localPortHls as number).toUInt();\n\t\t\t}\n\t\t\tif(configOptions!.diskCacheLimit!=null){\n\t\t\t\tconfig.diskCacheLimit=(configOptions!.diskCacheLimit as number).toUInt();\n\t\t\t}\n\t\t\tif(configOptions!.memoryCacheCountLimit!=null){\n\t\t\t\tconfig.memoryCacheCountLimit=(configOptions!.memoryCacheCountLimit as number).toUInt();\n\t\t\t}\n\t\t\tif(configOptions!.maxPeerConnections!=null){\n\t\t\t\tconfig.maxPeerConnections=(configOptions!.maxPeerConnections as number).toInt();\n\t\t\t}\n\t\t\tif(configOptions!.useHttpRange!=null){\n\t\t\t\tconfig.useHttpRange=configOptions!.useHttpRange as boolean;\n\t\t\t}\n\t\t\tif(configOptions!.httpHeadersForHls!=null){\n\t\t\t\tconfig.httpHeadersHls=configOptions!.httpHeadersForHls;\n\t\t\t}\n\t\t\tif(configOptions!.httpLoadTime!=null){\n\t\t\t\tconfig.httpLoadTime=(configOptions!.httpLoadTime as number).toDouble();\n\t\t\t}\n\t\t\tif(configOptions!.sharePlaylist!=null){\n\t\t\t\tconfig.sharePlaylist=configOptions!.sharePlaylist as boolean;\n\t\t\t}\n\t\t\tif(configOptions!.insertTimeOffsetTag!=null){\n\t\t\t\tconfig.playlistTimeOffset=(configOptions!.insertTimeOffsetTag as number).toDouble();\n\t\t\t}\n\t\t\tif(configOptions!.mediaFileSeparator!=null){\n\t\t\t\tconfig.mediaFileSeparator=configOptions!.mediaFileSeparator as string;\n\t\t\t}\n\t\t\n\t\n\t\t\n\t\tP2pEngine.setup(token=token, config=config)\n\t}else{\n\t\tP2pEngine.setup(token=token) \n\t}\n\tconsole.log(\"初始化完成\")\n\t\n\t\n\t\n\n}\n//将url转换成p2pUrl\n//除了原始播放地址(m3u8/mpd)，同时传入videoId用以构造channelId\nexport function  getP2pUrl(url : string,videoId:string|null=null) : string {\n\tlet parseUrl:string;\n\t\n\tif(videoId!=null){\n\t\t\n\t\tparseUrl= P2pEngine.shared.parseStreamUrl(url,videoId=videoId);\n\t\t\n\t\t\n\t}else{\n\t\tparseUrl=P2pEngine.shared.parseStreamUrl(url);\n\t\t\n\t}\n    return  parseUrl;\n}\n//当前插件的版本号。\nexport function getP2pEngineVersion():string{\n\t\n\treturn P2pEngine.VERSION;\n}\n//是否已与CDNBye后台建立连接。\nexport function p2pIsConnected():boolean{\n\treturn P2pEngine.shared.isConnected;\n}\n//立即停止P2P加速并释放资源，一般只需要在退出APP的时候调用即可。SDK采用\"懒释放\"的策略，只有在重启p2p的时候才释放资源。对于性能较差的设备起播耗时可能比较明显，建议在视频播放之前提前调用 engine.stopP2p() 。\nexport function stopP2p():void{\n\t P2pEngine.shared.stopP2p();\n}\n\n//重启P2P加速服务，一般不需要调用。\nexport function restartP2p():boolean{\n\treturn P2pEngine.shared.restartP2p();\n}\n\n//获取对等连接的id。\nexport function peerId():string{\n\treturn P2pEngine.shared.peerId;\n}\n\n\n//运行时动态关闭P2P，在播放下一个媒体文件时才生效。\nexport function disableP2p():void{\n\t P2pEngine.shared.disableP2p();\n}\n\n\n//运行时动态开启P2P，在播放下一个媒体文件时才生效。\nexport function enableP2p():void{\n\t P2pEngine.shared.enableP2p();\n}\n\n//停止P2P并关闭代理服务器。\nexport function shutdownP2p():void{\n\t P2pEngine.shared.shutdown();\n}\n"],"names":[],"mappings":"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"}