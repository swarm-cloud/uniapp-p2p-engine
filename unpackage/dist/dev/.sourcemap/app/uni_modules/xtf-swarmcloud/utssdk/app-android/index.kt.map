{"version":3,"sources":["uni_modules/xtf-swarmcloud/utssdk/app-android/index.uts"],"sourcesContent":["import P2pConfig from 'com.p2pengine.core.p2p.P2pConfig';\nimport P2pEngine from 'com.p2pengine.sdk.P2pEngine';\nimport TrackerZone from 'com.p2pengine.core.tracking.TrackerZone';\nimport LogLevel from 'com.p2pengine.core.utils.LogLevel';\nimport StrictHlsSegmentIdGenerator from 'com.p2pengine.core.segment.StrictHlsSegmentIdGenerator';\nimport MimeType from 'com.p2pengine.sdk.MimeType';\nimport TimeUnit from 'java.util.concurrent.TimeUnit';\n/**\n * UTSAndroid 为平台内置对象，不需要 import 可直接调用其API，[详见](https://uniapp.dcloud.net.cn/uts/utsandroid.html#utsandroid)\n */\nlet logArr = [LogLevel.VERBOSE,LogLevel.DEBUG,LogLevel.INFO,LogLevel.WARN,LogLevel.ERROR];\nlet zoneArr = [TrackerZone.Europe,TrackerZone.HongKong,TrackerZone.USA];\n\nexport type ConfigOptions = {\n  logEnabled?: boolean,// 是否打印日志 默认false\n  logLevel?: number,// 打印日志的级别0:VERBOSE,1:DEBUG,2:INFO,3:WARN,4:ERROR 默认3\n  trackerZone?:number,// tracker服务器地址所在国家的枚举，分为0:Europe,1:HongKong,2:USA 默认0\n  downloadTimeout?:number,// HTTP下载ts文件超时时间  默认30000ms\n  localPortHls?:number,// HLS本地代理服务器的端口号(默认随机端口)\n  localPortDash?:number,// DASH本地代理服务器的端口号(默认随机端口)\n  diskCacheLimit?:number,// 点播模式下P2P在磁盘缓存的最大数据量(设为0可以禁用磁盘缓存) 默认2000*1024*1024\n  memoryCacheCountLimit?:number,// P2P在内存缓存的最大数据量，用ts文件个数表示 默认15\n  maxPeerConnections?:number,// 最大连接节点数量 默认25\n  useHttpRange?:boolean,// 在可能的情况下使用Http Range请求来补足p2p下载超时的剩余部分数据 默认true\n  httpHeadersForHls?:Map<string,string>,// 设置请求ts和m3u8时的HTTP请求头 默认null\n  httpHeadersForDash?:Map<string,string>,// 设置请求Dash文件时的HTTP请求头 默认null\n  httpLoadTime?:number,// P2P下载超时后留给HTTP下载的时间 默认3s\n  sharePlaylist?:boolean,// 是否允许m3u8文件的P2P传输 默认false\n  insertTimeOffsetTag?:number,// 仅在直播模式生效，在m3u8文件中插入 \"#EXT-X-START:TIME-OFFSET=[timeOffset]\"，强制播放器从某个位置开始加载，其中 [timeOffset] 是在播放列表的偏移量，如果为负则从播放列表结尾往前偏移（单位：秒）\n  mediaFileSeparator?:string,// 媒体文件后缀分隔符 默认“.”\n}\n\n\n//初始化 \nexport  function initP2p (token:string,configOptions:ConfigOptions|null=null):void {\n\t\n\tlet configBuilder = P2pConfig.Builder();\n\tif(configOptions!=null){\n\t\tif(configOptions.logEnabled!=null){\n\t\t\tconfigBuilder=configBuilder.logEnabled(configOptions.logEnabled as boolean);\n\t\t}\n\t\tif(configOptions.logLevel!=null){\n\t\t\n\t\t\tconfigBuilder=configBuilder.logLevel(logArr[configOptions.logLevel as number]);\n\t\t}\n\t\tif(configOptions.trackerZone!=null){\n\t\t\tconfigBuilder=configBuilder.trackerZone(zoneArr[configOptions.trackerZone as number]);\n\t\t}\n\t\tif(configOptions.downloadTimeout!=null){\n\t\t\tconfigBuilder=configBuilder.downloadTimeout((configOptions.downloadTimeout as number).toInt(),TimeUnit.MILLISECONDS);\n\t\t}\n\t\tif(configOptions.localPortHls!=null){\n\t\t\n\t\t\tconfigBuilder=configBuilder.localPortHls((configOptions.localPortHls as number).toInt());\n\t\t}\n\t\tif(configOptions.localPortDash!=null){\n\t\t\n\t\t\tconfigBuilder=configBuilder.localPortDash((configOptions.localPortDash as number).toInt());\n\t\t}\n\t\tif(configOptions.diskCacheLimit!=null){\n\t\t\n\t\t\tconfigBuilder=configBuilder.diskCacheLimit((configOptions.diskCacheLimit as number).toLong());\n\t\t}\n\t\tif(configOptions.memoryCacheCountLimit!=null){\n\t\t\n\t\t\tconfigBuilder=configBuilder.memoryCacheCountLimit((configOptions.memoryCacheCountLimit as number).toInt());\n\t\t}\n\t\tif(configOptions.maxPeerConnections!=null){\n\t\t\n\t\t\tconfigBuilder=configBuilder.maxPeerConnections((configOptions.maxPeerConnections as number).toInt());\n\t\t}\n\t\tif(configOptions.useHttpRange!=null){\n\t\t\n\t\t\tconfigBuilder=configBuilder.useHttpRange(configOptions.useHttpRange as boolean);\n\t\t}\n\t\tif(configOptions.httpHeadersForHls!=null){\n\t\t\n\t\t\tconfigBuilder=configBuilder.httpHeadersForHls(configOptions.httpHeadersForHls as Map<string,string>);\n\t\t}\n\t\tif(configOptions.httpHeadersForDash!=null){\n\t\t\n\t\t\tconfigBuilder=configBuilder.httpHeadersForDash(configOptions.httpHeadersForDash as Map<string,string>);\n\t\t}\n\t\tif(configOptions.httpLoadTime!=null){\n\t\t\n\t\t\tconfigBuilder=configBuilder.httpLoadTime(((configOptions.httpLoadTime as number)*1000).toLong());\n\t\t}\n\t\tif(configOptions.sharePlaylist!=null){\n\t\t\n\t\t\tconfigBuilder=configBuilder.sharePlaylist(configOptions.sharePlaylist as boolean);\n\t\t}\n\t\tif(configOptions.insertTimeOffsetTag!=null){\n\t\t\n\t\t\tconfigBuilder=configBuilder.insertTimeOffsetTag((configOptions.insertTimeOffsetTag as number).toDouble());\n\t\t}\n\t\tif(configOptions.mediaFileSeparator!=null){\n\t\t\n\t\t\tconfigBuilder=configBuilder.mediaFileSeparator(configOptions.mediaFileSeparator as string);\n\t\t}\n\t}\n\t\n\tlet config=configBuilder.build();\n\tP2pEngine.init(UTSAndroid.getAppContext()!, token, config);\n\t\n\n}\n//如果媒体文件是由多个服务器生成的，为避免冲突，请调用此函数：\nexport function setHlsSegmentIdGenerator():void{\n\t\n\tP2pEngine.instance?.setHlsSegmentIdGenerator(new StrictHlsSegmentIdGenerator());\n\t\n}\n\n//将url转换成p2pUrl\n//除了原始播放地址(m3u8/mpd)，同时传入videoId用以构造channelId\n//除了原始播放地址(m3u8/mpd)以及videoId，同时传入mimeType（目前支持MimeType.APPLICATION_M3U8和MimeType.APPLICATION_MPD），用于无\".m3u8\"或\".mpd\"后缀的url。\nexport function  getP2pUrl(url : string,videoId:string|null=null,mimeType:string|null=null) : string {\n\tlet parseUrl:string;\n\t\n\tif(videoId!=null){\n\t\tif(mimeType!=null){\n\t\t\tswitch(mimeType){\n\t\t\t\tcase 'm3u8':\n\t\t\t\t\tparseUrl= P2pEngine.instance!.parseStreamUrl(url,videoId,MimeType.APPLICATION_M3U8);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'mpd':\n\t\t\t\t\tparseUrl= P2pEngine.instance!.parseStreamUrl(url,videoId,MimeType.APPLICATION_MPD);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tparseUrl= P2pEngine.instance!.parseStreamUrl(url,videoId);\n\t\t\t}\n\t\t\t\n\t\t}else{\n\t\t\tparseUrl= P2pEngine.instance!.parseStreamUrl(url,videoId);\n\t\t}\n\t\t\n\t}else{\n\t\tparseUrl=P2pEngine.instance!.parseStreamUrl(url);\n\t\t\n\t}\n    return  parseUrl;\n}\n//当前插件的版本号。\nexport function getP2pEngineVersion():string{\n\treturn P2pEngine.version;\n}\n//是否已与CDNBye后台建立连接。\nexport function p2pIsConnected():boolean{\n\treturn P2pEngine.instance!.isConnected;\n}\n\n//立即停止P2P加速并释放资源，一般只需要在退出APP的时候调用即可。SDK采用\"懒释放\"的策略，只有在重启p2p的时候才释放资源。对于性能较差的设备起播耗时可能比较明显，建议在视频播放之前提前调用 engine.stopP2p() 。\nexport function stopP2p():void{\n\t P2pEngine.instance!.stopP2p();\n}\n\n//重启P2P加速服务，一般不需要调用。\nexport function restartP2p():boolean{\n\treturn P2pEngine.instance!.restartP2p();\n}\n\n//获取对等连接的id。\nexport function peerId():string{\n\treturn P2pEngine.instance!.peerId;\n}\n\n\n//动态设置请求ts和m3u8时的HTTP请求头。\nexport function setHttpHeadersForHls(headers: Map<String, String>):void{\n\t P2pEngine.instance!.setHttpHeadersForHls(headers);\n}\n\n\n//动态设置请求Dash文件时的HTTP请求头。\nexport function setHttpHeadersForDash(headers: Map<String, String>):void{\n\t P2pEngine.instance!.setHttpHeadersForDash(headers);\n}\n\n//运行时动态关闭P2P，在播放下一个媒体文件时才生效。\nexport function disableP2p():void{\n\t P2pEngine.instance!.disableP2p();\n}\n\n\n//运行时动态开启P2P，在播放下一个媒体文件时才生效。\nexport function enableP2p():void{\n\t P2pEngine.instance!.enableP2p();\n}\n\n//停止P2P并关闭代理服务器。\nexport function shutdownP2p():void{\n\t P2pEngine.instance!.shutdown();\n}\n\n\n\n\n\n"],"names":[],"mappings":"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"}