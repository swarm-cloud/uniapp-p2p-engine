<template>
	<view class="content">

		<video class="video" ref="video" id="video" :src="src" @error="onError" :controls="true"></video>
		
		 <button @tap="startPlay">p2p播放</button>
		 <button @tap="stop">停止播放</button>
		 <button @tap="mystopP2p">停止P2P</button>

	</view>
	<view class="uni-padding-wrap uni-common-mt">
	    <view class="uni-flex uni-row">
	      <text class="text-item">P2P: {{(p2pTraffic/1000).toFixed(1)}}MB</text>
	      <text class="text-item">效率: {{ratio}}%</text>
	    </view>
	    <view class="uni-flex uni-row">
	      <text class="text-item">上传: {{(uploaded/1000).toFixed(1)}}MB</text>
	      <text class="text-item">已连接: {{connected}}</text>
	    </view>
	    <view class="uni-flex uni-row">
	      <text class="text-item">Peers: {{peers}}</text>
	      <text class="text-item">Version: {{version}}</text>
	    </view>
	  </view>
</template>

<script>

	import { ConfigOptions, StatsObject, initP2p, getP2pUrl, getP2pEngineVersion , stopP2p, onP2pStats } from "@/uni_modules/cdnbye-swarmcloud/";
	export default {
		onReady() {
            this.videoContext = uni.createVideoContext('video', this);
            let options = {
				 trackerZone:0,
				 insertTimeOffsetTag: 0,
			   } as ConfigOptions;
               initP2p("ZMuO5qHZg",options);        // 此处换成在控制台获取的token
			   this.version = getP2pEngineVersion();
			   onP2pStats((stats: StatsObject) => {
				   if (stats.serverConnected != null) {
					   this.connected = stats.serverConnected as boolean;
				   }
				   if (stats.httpDownloaded != null) {
					   this.httpTraffic += stats.httpDownloaded as number;
					   this.ratio = (this.p2pTraffic/(this.httpTraffic + this.p2pTraffic)*100).toFixed(0);
				   } 
				   if (stats.p2pDownloaded != null) {
					   this.p2pTraffic += stats.p2pDownloaded as number;
					   this.ratio = (this.p2pTraffic/(this.httpTraffic + this.p2pTraffic)*100).toFixed(0);
				   }
				   if (stats.p2pUploaded != null) {
					   this.uploaded += stats.p2pUploaded as number;
				   }
				   if (stats.peers != null) {
					   this.peers = stats.peers as number;
				   }
			   })
        },
		data() {
			return {
				videoContext: null as VideoContext | null,
				// 属性
				src:"",
				originalSrc: "https://cph-p2p-msl.akamaized.net/hls/live/2000341/test/level_0.m3u8",
			    p2pTraffic: 0,
				httpTraffic: 0,
				ratio: "0",
				uploaded: 0,
				peers: 0,
				connected: false,
				version: "",
			}
		},
		onLoad() {

		},
		onShow() {

		},
		methods: {
			startPlay(){
				this.src=getP2pUrl(this.originalSrc);
				console.log(this.src);
				this.videoContext?.play();
			},
			mystopP2p(){
				stopP2p();
			},
			stop(){
				this.videoContext?.stop();
			},

			onError: function (res : UniVideoErrorEvent) {
			        console.log(res.type + " -> " + JSON.stringify(res.detail));

			},

		}
	}
</script>

<style>
	.content {
		display: flex;
		align-items: center;
		justify-content: center;
		margin-bottom: 20;
	}

	.logo {
		height: 200rpx;
		width: 200rpx;
		margin-top: 200rpx;
		margin-bottom: 50rpx;
	}

	.title {
		font-size: 36rpx;
		color: #8f8f94;
	}
	
	.text-item {
	  flex: 1; /* 使文本项均匀分布 */
	  text-align: center; /* 文本居中 */
	  margin: 20;
	}
</style>
