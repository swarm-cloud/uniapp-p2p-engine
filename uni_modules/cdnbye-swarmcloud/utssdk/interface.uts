
export type ConfigOptions = {
  p2pEnabled?: boolean,// 开启或关闭p2p engine 默认true
  useStrictHlsSegmentId?: boolean,//使用基于url的SegmentId，替代默认基于序列号的 默认false
  isSetTopBox?: boolean,// 如果运行于机顶盒请设置成true 默认false 安卓有 ios没有
  logEnabled?: boolean,// 是否打印日志 默认false
  logLevel?: number,// 打印日志的级别0:VERBOSE,1:DEBUG,2:INFO,3:WARN,4:ERROR 默认3
  trackerZone?:number,// tracker服务器地址所在国家的枚举，分为0:Europe,1:HongKong,2:USA,3:China 默认0
  downloadTimeout?:number,// HTTP下载ts文件超时时间  默认30000ms
  localPortHls?:number,// HLS本地代理服务器的端口号(默认随机端口)
  localPortDash?:number,// DASH本地代理服务器的端口号(默认随机端口)
  diskCacheLimit?:number,// 点播模式下P2P在磁盘缓存的最大数据量(设为0可以禁用磁盘缓存) 默认2000*1024*1024
  memoryCacheCountLimit?:number,// P2P在内存缓存的最大数据量，用ts文件个数表示 默认15
  maxPeerConnections?:number,// 最大连接节点数量 默认25
  useHttpRange?:boolean,// 在可能的情况下使用Http Range请求来补足p2p下载超时的剩余部分数据 默认true
  httpHeadersForHls?:Map<string,string>,// 设置请求ts和m3u8时的HTTP请求头 默认null
  httpHeadersForDash?:Map<string,string>,// 设置请求Dash文件时的HTTP请求头 默认null
  httpLoadTime?:number,// P2P下载超时后留给HTTP下载的时间 默认3s
  sharePlaylist?:boolean,// 是否允许m3u8文件的P2P传输 默认false
  prefetchOnly?:boolean,// HLS模式下只采用预加载的方式进行P2P下载 默认false
  downloadOnly?:boolean,// 默认false
  insertTimeOffsetTag?:number,// 仅在直播模式生效，在m3u8文件中插入 "#EXT-X-START:TIME-OFFSET=[timeOffset]"，强制播放器从某个位置开始加载，其中 [timeOffset] 是在播放列表的偏移量，如果为负则从播放列表结尾往前偏移（单位：秒） 安卓有 ios没有
  mediaFileSeparator?:string,// 媒体文件后缀分隔符 默认“.”
  tag?:string,// 自定义标签
  signalConfig?:string,// 自定义信令地址
  announce?:string,// 自定义tracker地址
  hlsMediaFiles?:Array<string>,// 支持的HLS媒体文件后缀
  dashMediaFiles?:Array<string>,// 支持的DASH媒体文件后缀 安卓有 ios没有
}

export type StatsObject = {
	httpDownloaded?: number,
	p2pUploaded?: number,
	p2pDownloaded?: number,
	p2pDownloadSpeed?: number,
	peers?: number,
	serverConnected?: boolean,
}

export type onStatsCallback = (msg: StatsObject) => void